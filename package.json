{
  "name": "bolgia",
  "version": "1.0.2",
  "description": "Bolgia, an helper module for the config hell. It recursively clones, mixes, updates and improves configuration objects/hashes with nested properties. '..non ragioniam di lor, ma guarda e passa..' ",
  "homepage": "https://github.com/rootslab/bolgia",
  "private": false,
  "repository": {
    "type": "git",
    "url": "git://github.com/rootslab/bolgia.git"
  },
  "keywords": [
    "JSON",
    "Object",
    "config",
    "mix",
    "clone",
    "improve",
    "update",
    "qs",
    "flatten",
    "querystring",
    "hell"
  ],
  "tags": [],
  "author": {
    "name": "Guglielmo Ferri",
    "email": "44gatti@gmail.com"
  },
  "dependencies": {},
  "devDependencies": {},
  "main": "index",
  "engines": {
    "node": ">=0.10.x"
  },
  "scripts": {
    "test": "bash test/run.sh"
  },
  "license": "MIT",
  "readmeFilename": "Readme.md",
  "readme": "###Bolgia\n[![build status](https://secure.travis-ci.org/rootslab/bolgia.png?branch=master)](http://travis-ci.org/rootslab/bolgia) \n[![NPM version](https://badge.fury.io/js/bolgia.png)](http://badge.fury.io/js/bolgia)\n> _Bolgia_, an helper module for the __config hell__.\n\n> It **recursively clone**, **mix**, **update** and **improve** \n> configuration objects/hashes with **nested** properties.\n\n> _˝..non ragioniam di lor, ma guarda e passa.._˝\n\n###Install\n\n```bash\n$ npm install bolgia [-g]\n// clone repo\n$ git clone git@github.com:rootslab/bolgia.git\n```\n\n> __require__ \n\n```javascript\nvar Bolgia  = require( 'bolgia' );\n```\n\n> _require_ returns an helper hash/obj with some properties/methods.\n> See [examples](example/).\n\n###Run Tests\n\n```bash\n$ cd bolgia/\n$ npm test\n```\n\n###Methods\n\n> Arguments within [ ] are optional.\n\n```javascript\n\n/*\n * simple cloning\n */\nBolgia#clone( Object obj ) : Object\n\n/*\n * simple 'flat' mix between dest and src objects,\n * it brutally overwrites dest properties with no\n * recursion on properties.\n */\nBolgia#mix( Object dest, Object src ) : Object\n\n/*\n * method to improve the dest obj with all properties/values\n * from the src obj ( it doesn't overwrites existing dest properties/values )\n */\nBolgia#improve( Object dest, Object src ) : Object\n\n/*\n * method to update the dest obj with all properties/values\n * from the src obj ( it overwrites existing dest properties/values )\n */\nBolgia#update( Object dest, Object src ) : Object\n\n```\n\n###Sample Usage\n\n> _**require** libs:_\n\n```javascript\nvar log = console.log,\n    , util = require( 'util' )\n    , Bolgia = require( 'bolgia' );\n```\n\n> _define a **default** configuration object/hash:_\n\n```javascript\n\nvar cfg = {\n    letters : [ 'aaa', 'bbb', 'ccc','ddd' ]\n    , numbers : {\n        1 : false\n        , 2 : false\n        , 3 : false\n        , 4 : false\n    }\n    , hell : {\n        h1 : {\n            a : [ 'a1!', 'a2!', 'a3!' ]\n            , b : [ 'b1!', 'b2!', 'b3!' ]\n        }\n        , h3 : {\n            1 : 0\n            , 2 : 0\n        }\n\n    }\n};\n```\n\n> _define a custom **update** object/hash:_\n\n```javascript\n\nvar upd = {\n    letters : [ undefined, 'BBB', 'CCC', undefined, 'EEE' ]\n    , numbers : {\n        1 : true\n        , 3 : Infinity\n        , 4 : null\n    }\n    , hell : {\n        h1 : {\n            a : [ undefined, 'A2!' ]\n            , b : [ 'B1!', undefined, 'B3!' ]\n            , e : [ undefined, 'E2!', 'E3!' ]\n        }\n        , h2 : 'BLAH'\n        , h3 : {\n            2 : new Date( '1913' )\n        }\n    }\n};\n```\n\n> _**update** cfg with upd, and output results to console:_\n\n```javascript\n\nBolgia.update( cfg, upd );\n\nlog( util.inspect( cfg, !true, null, true ) );\n\n/* \n * NOTE: sub-properties like arrays and hashes \n * are not brutally overwritten, but finely updated\n */\n\n{\n    letters: [ 'aaa', 'BBB', 'CCC', 'ddd', 'EEE' ]\n    , numbers : {\n        1 : true\n        , 2 : false\n        , 3 : Infinity\n        , 4 : null\n    }\n    , hell : {\n        h1 : { a: [ 'a1!', 'A2!', 'a3!' ]\n        , h2 : 'BLAH'\n            b : [ 'B1!', 'b2!', 'B3!' ]\n            , e : [ undefined, 'E2!', 'E3!' ] }\n        h3 : {\n            1 : 0\n            , 2 : Wed Jan 01 1913 01:00:00 GMT+0100 (CET)\n        }\n    }\n}\n```\n\n> _See [examples/readme-example.js](example/readme.example.js)_\n\n------------------------------------------------------------------------\n\n### MIT License\n\n> Copyright (c) 2012 &lt; Guglielmo Ferri : 44gatti@gmail.com &gt;\n\n> Permission is hereby granted, free of charge, to any person obtaining\n> a copy of this software and associated documentation files (the\n> 'Software'), to deal in the Software without restriction, including\n> without limitation the rights to use, copy, modify, merge, publish,\n> distribute, sublicense, and/or sell copies of the Software, and to\n> permit persons to whom the Software is furnished to do so, subject to\n> the following conditions:\n\n> __The above copyright notice and this permission notice shall be\n> included in all copies or substantial portions of the Software.__\n\n> THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n> EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n> MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n> IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n> CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n> TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n> SOFTWARE OR THE USE OR OTHER DEALINGS IN T",
  "bugs": {
    "url": "https://github.com/rootslab/bolgia/issues"
  },
  "_id": "bolgia@0.2.2",
  "_from": "bolgia@"
}
